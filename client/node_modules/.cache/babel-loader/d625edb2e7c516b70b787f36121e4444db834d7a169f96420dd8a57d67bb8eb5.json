{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Papa from\"papaparse\";import{BlobServiceClient}from\"@azure/storage-blob\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Data(){// Page-level configuration variables\nconst storageAccountName=\"ppastorageaccount159\";const sasToken=\"sv=2024-11-04&ss=bfqt&srt=sco&sp=rwd&se=2045-03-20T12:52:05Z&st=2025-03-13T04:52:05Z&spr=https,http&sig=7lAkSTM%2F7Gd4RCmeLiUXqAfNsWYrZx65sJnnrFDAxpo%3D\";const containerName=\"nwmiws\";// List of available CSV files in the Azure Blob container.\nconst csvFiles=[\"locations.csv\",\"water_quality_data.csv\"];const[selectedFile,setSelectedFile]=useState(csvFiles[0]);const[csvData,setCsvData]=useState([]);const[initialCsvData,setInitialCsvData]=useState([]);const[loading,setLoading]=useState(true);// Function to load CSV file from the Azure Blob container.\nconst loadCSV=fileName=>{setLoading(true);const fileUrl=`https://${storageAccountName}.blob.core.windows.net/${containerName}/${fileName}?${sasToken}`;fetch(fileUrl).then(response=>response.text()).then(csvText=>{Papa.parse(csvText,{header:true,complete:result=>{// Remove rows that are completely empty.\nconst filteredData=result.data.filter(row=>Object.values(row).some(val=>val&&val.toString().trim()!==\"\"));setCsvData(filteredData);setInitialCsvData(filteredData);// Store original data for cancel/undo\nsetLoading(false);}});}).catch(error=>{console.error(\"Error loading CSV:\",error);setLoading(false);});};// Load CSV whenever the selected file changes.\nuseEffect(()=>{loadCSV(selectedFile);},[selectedFile]);// Handle changes in CSV data cells.\nconst handleChange=(rowIndex,field,newValue)=>{const updatedData=[...csvData];updatedData[rowIndex][field]=newValue;setCsvData(updatedData);};// Add new row: use headers from the first row if available.\nconst addNewRow=()=>{let newRow={};if(csvData.length>0){const headers=Object.keys(csvData[0]);headers.forEach(header=>{newRow[header]=\"\";});}setCsvData([...csvData,newRow]);};// Delete row: remove a row from csvData by index.\nconst deleteRow=rowIndex=>{const updatedData=csvData.filter((_,index)=>index!==rowIndex);setCsvData(updatedData);};// Cancel changes: reset csvData to the initially loaded data.\nconst cancelChanges=()=>{setCsvData(initialCsvData);};// Function to update or create a CSV file in the Azure Blob container.\nconst commitSave=async()=>{const csv=Papa.unparse(csvData);const blobData=new Blob([csv],{type:\"text/csv;charset=utf-8;\"});const blobServiceClient=new BlobServiceClient(`https://${storageAccountName}.blob.core.windows.net/?${sasToken}`);const containerClient=blobServiceClient.getContainerClient(containerName);const blobName=String(selectedFile);const blockBlobClient=containerClient.getBlockBlobClient(blobName);try{await blockBlobClient.uploadData(blobData,{blobHTTPHeaders:{blobContentType:\"text/csv\"}});alert(\"CSV file uploaded successfully!\");}catch(error){console.error(\"Error uploading CSV:\",error);alert(\"Error uploading CSV file.\");}};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading CSV data...\"});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Editor\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"csv-select\",children:\"Select CSV File: \"}),/*#__PURE__*/_jsx(\"select\",{id:\"csv-select\",value:selectedFile,onChange:e=>setSelectedFile(e.target.value),children:csvFiles.map((file,idx)=>/*#__PURE__*/_jsx(\"option\",{value:file,children:file},idx))})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsx(\"button\",{onClick:addNewRow,children:\"Add New Row\"})}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",cellPadding:\"5\",cellSpacing:\"0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[csvData.length>0&&Object.keys(csvData[0]).map((header,index)=>/*#__PURE__*/_jsx(\"th\",{children:header},index)),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:csvData.map((row,rowIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[Object.entries(row).map((_ref,colIndex)=>{let[field,value]=_ref;return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:e=>handleChange(rowIndex,field,e.target.value)})},colIndex);}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteRow(rowIndex),children:\"Delete\"})})]},rowIndex))})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:commitSave,children:\"Commit Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelChanges,style:{marginLeft:\"10px\"},children:\"Cancel Changes\"})]});}export default Data;","map":{"version":3,"names":["React","useEffect","useState","Papa","BlobServiceClient","jsx","_jsx","jsxs","_jsxs","Data","storageAccountName","sasToken","containerName","csvFiles","selectedFile","setSelectedFile","csvData","setCsvData","initialCsvData","setInitialCsvData","loading","setLoading","loadCSV","fileName","fileUrl","fetch","then","response","text","csvText","parse","header","complete","result","filteredData","data","filter","row","Object","values","some","val","toString","trim","catch","error","console","handleChange","rowIndex","field","newValue","updatedData","addNewRow","newRow","length","headers","keys","forEach","deleteRow","_","index","cancelChanges","commitSave","csv","unparse","blobData","Blob","type","blobServiceClient","containerClient","getContainerClient","blobName","String","blockBlobClient","getBlockBlobClient","uploadData","blobHTTPHeaders","blobContentType","alert","children","style","padding","marginBottom","htmlFor","id","value","onChange","e","target","map","file","idx","onClick","border","cellPadding","cellSpacing","entries","_ref","colIndex","marginLeft"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/client/src/Data.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { BlobServiceClient } from \"@azure/storage-blob\";\r\n\r\nfunction Data() {\r\n  // Page-level configuration variables\r\n  const storageAccountName = \"ppastorageaccount159\";\r\n  const sasToken = \"sv=2024-11-04&ss=bfqt&srt=sco&sp=rwd&se=2045-03-20T12:52:05Z&st=2025-03-13T04:52:05Z&spr=https,http&sig=7lAkSTM%2F7Gd4RCmeLiUXqAfNsWYrZx65sJnnrFDAxpo%3D\";\r\n  const containerName = \"nwmiws\";\r\n  \r\n  // List of available CSV files in the Azure Blob container.\r\n  const csvFiles = [\"locations.csv\", \"water_quality_data.csv\"];\r\n  const [selectedFile, setSelectedFile] = useState(csvFiles[0]);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [initialCsvData, setInitialCsvData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Function to load CSV file from the Azure Blob container.\r\n  const loadCSV = (fileName) => {\r\n    setLoading(true);\r\n    const fileUrl = `https://${storageAccountName}.blob.core.windows.net/${containerName}/${fileName}?${sasToken}`;\r\n    \r\n    fetch(fileUrl)\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          complete: (result) => {\r\n            // Remove rows that are completely empty.\r\n            const filteredData = result.data.filter(row =>\r\n              Object.values(row).some(\r\n                (val) => val && val.toString().trim() !== \"\"\r\n              )\r\n            );\r\n            setCsvData(filteredData);\r\n            setInitialCsvData(filteredData); // Store original data for cancel/undo\r\n            setLoading(false);\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading CSV:\", error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // Load CSV whenever the selected file changes.\r\n  useEffect(() => {\r\n    loadCSV(selectedFile);\r\n  }, [selectedFile]);\r\n\r\n  // Handle changes in CSV data cells.\r\n  const handleChange = (rowIndex, field, newValue) => {\r\n    const updatedData = [...csvData];\r\n    updatedData[rowIndex][field] = newValue;\r\n    setCsvData(updatedData);\r\n  };\r\n\r\n  // Add new row: use headers from the first row if available.\r\n  const addNewRow = () => {\r\n    let newRow = {};\r\n    if (csvData.length > 0) {\r\n      const headers = Object.keys(csvData[0]);\r\n      headers.forEach((header) => {\r\n        newRow[header] = \"\";\r\n      });\r\n    }\r\n    setCsvData([...csvData, newRow]);\r\n  };\r\n\r\n  // Delete row: remove a row from csvData by index.\r\n  const deleteRow = (rowIndex) => {\r\n    const updatedData = csvData.filter((_, index) => index !== rowIndex);\r\n    setCsvData(updatedData);\r\n  };\r\n\r\n  // Cancel changes: reset csvData to the initially loaded data.\r\n  const cancelChanges = () => {\r\n    setCsvData(initialCsvData);\r\n  };\r\n\r\n  // Function to update or create a CSV file in the Azure Blob container.\r\n  const commitSave = async () => {\r\n    const csv = Papa.unparse(csvData);\r\n    const blobData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const blobServiceClient = new BlobServiceClient(\r\n      `https://${storageAccountName}.blob.core.windows.net/?${sasToken}`\r\n    );\r\n    const containerClient = blobServiceClient.getContainerClient(containerName);\r\n\r\n    const blobName = String(selectedFile);\r\n    const blockBlobClient = containerClient.getBlockBlobClient(blobName);\r\n\r\n    try {\r\n      await blockBlobClient.uploadData(blobData, {\r\n        blobHTTPHeaders: { blobContentType: \"text/csv\" },\r\n      });\r\n      alert(\"CSV file uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading CSV:\", error);\r\n      alert(\"Error uploading CSV file.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading CSV data...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Data Editor</h2>\r\n      {/* CSV File Selection */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <label htmlFor=\"csv-select\">Select CSV File: </label>\r\n        <select\r\n          id=\"csv-select\"\r\n          value={selectedFile}\r\n          onChange={(e) => setSelectedFile(e.target.value)}\r\n        >\r\n          {csvFiles.map((file, idx) => (\r\n            <option key={idx} value={file}>\r\n              {file}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {/* Add New Row Button */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <button onClick={addNewRow}>Add New Row</button>\r\n      </div>\r\n      {/* Editable CSV Data Table */}\r\n      <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\">\r\n        <thead>\r\n          <tr>\r\n            {csvData.length > 0 &&\r\n              Object.keys(csvData[0]).map((header, index) => (\r\n                <th key={index}>{header}</th>\r\n              ))}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {csvData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {Object.entries(row).map(([field, value], colIndex) => (\r\n                <td key={colIndex}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) =>\r\n                      handleChange(rowIndex, field, e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n              ))}\r\n              <td>\r\n                <button onClick={() => deleteRow(rowIndex)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      {/* Commit and Cancel Buttons */}\r\n      <button onClick={commitSave}>Commit Save</button>\r\n      <button onClick={cancelChanges} style={{ marginLeft: \"10px\" }}>Cancel Changes</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}