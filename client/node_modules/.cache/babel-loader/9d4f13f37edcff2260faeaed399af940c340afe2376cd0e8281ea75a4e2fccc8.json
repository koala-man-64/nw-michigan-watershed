{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdpro\\\\Projects\\\\NW Watershed Coalition\\\\dashboard\\\\src\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters({\n  onFilterChange\n}) {\n  _s();\n  const [sites, setSites] = useState([]);\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  // Load site data from CSV\n  useEffect(() => {\n    fetch(\"/locations.csv\").then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          const siteOptions = result.data.map(site => ({\n            value: site.id,\n            label: site.name\n          }));\n          setSites(siteOptions);\n        }\n      });\n    });\n  }, []);\n\n  // Handle filter updates\n  useEffect(() => {\n    onFilterChange({\n      selectedSite,\n      startDate,\n      endDate\n    });\n  }, [selectedSite, startDate, endDate, onFilterChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Site:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: sites,\n      value: selectedSite,\n      onChange: setSelectedSite,\n      placeholder: \"Select a site...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"From:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: date => setStartDate(date),\n      dateFormat: \"MM/dd/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Until:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: endDate,\n      onChange: date => setEndDate(date),\n      dateFormat: \"MM/dd/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"xwYl3y75b3S/M2129lMs5LtPsyY=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","Select","DatePicker","Papa","jsxDEV","_jsxDEV","Filters","onFilterChange","_s","sites","setSites","selectedSite","setSelectedSite","startDate","setStartDate","Date","endDate","setEndDate","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","siteOptions","data","map","site","value","id","label","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","placeholder","selected","date","dateFormat","_c","$RefreshReg$"],"sources":["C:/Users/rdpro/Projects/NW Watershed Coalition/dashboard/src/Filters.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Filters({ onFilterChange }) {\r\n  const [sites, setSites] = useState([]);\r\n  const [selectedSite, setSelectedSite] = useState(null);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Load site data from CSV\r\n  useEffect(() => {\r\n    fetch(\"/locations.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            const siteOptions = result.data.map((site) => ({\r\n              value: site.id,\r\n              label: site.name,\r\n            }));\r\n            setSites(siteOptions);\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // Handle filter updates\r\n  useEffect(() => {\r\n    onFilterChange({ selectedSite, startDate, endDate });\r\n  }, [selectedSite, startDate, endDate, onFilterChange]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <h3>Filter Data</h3>\r\n      \r\n      {/* Site Selector */}\r\n      <label>Site:</label>\r\n      <Select\r\n        options={sites}\r\n        value={selectedSite}\r\n        onChange={setSelectedSite}\r\n        placeholder=\"Select a site...\"\r\n      />\r\n\r\n      {/* Date Pickers */}\r\n      <label>From:</label>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date) => setStartDate(date)}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n      />\r\n\r\n      <label>Until:</label>\r\n      <DatePicker\r\n        selected={endDate}\r\n        onChange={(date) => setEndDate(date)}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,OAAOA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAAC;;EAElD;EACAf,SAAS,CAAC,MAAM;IACdkB,KAAK,CAAC,gBAAgB,CAAC,CACpBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjBnB,IAAI,CAACoB,KAAK,CAACD,OAAO,EAAE;QAClBE,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,WAAW,GAAGD,MAAM,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;YAC7CC,KAAK,EAAED,IAAI,CAACE,EAAE;YACdC,KAAK,EAAEH,IAAI,CAACI;UACd,CAAC,CAAC,CAAC;UACHzB,QAAQ,CAACkB,WAAW,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5B,SAAS,CAAC,MAAM;IACdO,cAAc,CAAC;MAAEI,YAAY;MAAEE,SAAS;MAAEG;IAAQ,CAAC,CAAC;EACtD,CAAC,EAAE,CAACL,YAAY,EAAEE,SAAS,EAAEG,OAAO,EAAET,cAAc,CAAC,CAAC;EAEtD,oBACEF,OAAA;IAAK+B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBhC,OAAA;MAAAgC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpBpC,OAAA;MAAAgC,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBpC,OAAA,CAACJ,MAAM;MACLyC,OAAO,EAAEjC,KAAM;MACfuB,KAAK,EAAErB,YAAa;MACpBgC,QAAQ,EAAE/B,eAAgB;MAC1BgC,WAAW,EAAC;IAAkB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAGFpC,OAAA;MAAAgC,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBpC,OAAA,CAACH,UAAU;MACT2C,QAAQ,EAAEhC,SAAU;MACpB8B,QAAQ,EAAGG,IAAI,IAAKhC,YAAY,CAACgC,IAAI,CAAE;MACvCC,UAAU,EAAC;IAAY;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEFpC,OAAA;MAAAgC,QAAA,EAAO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrBpC,OAAA,CAACH,UAAU;MACT2C,QAAQ,EAAE7B,OAAQ;MAClB2B,QAAQ,EAAGG,IAAI,IAAK7B,UAAU,CAAC6B,IAAI,CAAE;MACrCC,UAAU,EAAC;IAAY;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjC,EAAA,CA3DQF,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AA6DhB,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}