{"ast":null,"code":"import React,{useEffect,useState}from'react';import{MapContainer,TileLayer,Marker,Popup,useMap}from'react-leaflet';import L from'leaflet';import Papa from'papaparse';import'leaflet/dist/leaflet.css';// Fix default icon issue in Leaflet with Webpack\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:require('leaflet/dist/images/marker-icon-2x.png'),iconUrl:require('leaflet/dist/images/marker-icon.png'),shadowUrl:require('leaflet/dist/images/marker-shadow.png')});// Component to set initial bounds when map is created\nfunction SetMapBounds(_ref){let{bounds}=_ref;const map=useMap();useEffect(()=>{if(bounds.isValid()){map.fitBounds(bounds,{padding:[20,20]});}// Run only once at mount time\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[map,bounds]);return null;}function MapPanel(_ref2){let{selectedSites}=_ref2;const[allLocations,setAllLocations]=useState([]);// Load all locations from locations.csv on mount\nuseEffect(()=>{fetch('/locations.csv').then(response=>response.text()).then(csvText=>{Papa.parse(csvText,{header:true,skipEmptyLines:true,complete:result=>{// Assume CSV has columns: id, name, latitude, longitude (adjust field names if needed)\nconst locations=result.data.map(row=>({name:row.name||row.Location,lat:parseFloat(row.latitude)||parseFloat(row.Latitude),lng:parseFloat(row.longitude)||parseFloat(row.Longitude)})).filter(loc=>!isNaN(loc.lat)&&!isNaN(loc.lng));setAllLocations(locations);}});});},[]);// Calculate bounds to cover all locations\nconst bounds=L.latLngBounds(allLocations.map(loc=>[loc.lat,loc.lng]));// Filter locations that are selected (based on name)\nconst selectedLocations=allLocations.filter(loc=>selectedSites.includes(loc.name));return/*#__PURE__*/_jsxs(MapContainer,{style:{height:'100%',width:'100%'},scrollWheelZoom:true,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 OpenStreetMap contributors\"}),allLocations.length>0&&/*#__PURE__*/_jsx(SetMapBounds,{bounds:bounds}),selectedLocations.map((loc,index)=>/*#__PURE__*/_jsx(Marker,{position:[loc.lat,loc.lng],children:/*#__PURE__*/_jsx(Popup,{children:loc.name})},index))]});}export default MapPanel;","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","L","Papa","jsx","_jsx","jsxs","_jsxs","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","SetMapBounds","_ref","bounds","map","isValid","fitBounds","padding","MapPanel","_ref2","selectedSites","allLocations","setAllLocations","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","locations","data","row","name","Location","lat","parseFloat","latitude","Latitude","lng","longitude","Longitude","filter","loc","isNaN","latLngBounds","selectedLocations","includes","style","height","width","scrollWheelZoom","children","url","attribution","length","index","position"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/dashboard/src/MapPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport Papa from 'papaparse';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix default icon issue in Leaflet with Webpack\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// Component to set initial bounds when map is created\r\nfunction SetMapBounds({ bounds }) {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    if (bounds.isValid()) {\r\n      map.fitBounds(bounds, { padding: [20, 20] });\r\n    }\r\n    // Run only once at mount time\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [map, bounds]);\r\n  return null;\r\n}\r\n\r\nfunction MapPanel({ selectedSites }) {\r\n  const [allLocations, setAllLocations] = useState([]);\r\n\r\n  // Load all locations from locations.csv on mount\r\n  useEffect(() => {\r\n    fetch('/locations.csv')\r\n      .then(response => response.text())\r\n      .then(csvText => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            // Assume CSV has columns: id, name, latitude, longitude (adjust field names if needed)\r\n            const locations = result.data.map(row => ({\r\n              name: row.name || row.Location, \r\n              lat: parseFloat(row.latitude) || parseFloat(row.Latitude),\r\n              lng: parseFloat(row.longitude) || parseFloat(row.Longitude)\r\n            })).filter(loc => !isNaN(loc.lat) && !isNaN(loc.lng));\r\n            setAllLocations(locations);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // Calculate bounds to cover all locations\r\n  const bounds = L.latLngBounds(allLocations.map(loc => [loc.lat, loc.lng]));\r\n\r\n  // Filter locations that are selected (based on name)\r\n  const selectedLocations = allLocations.filter(loc => selectedSites.includes(loc.name));\r\n\r\n  return (\r\n    <MapContainer style={{ height: '100%', width: '100%' }} scrollWheelZoom={true}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"&copy; OpenStreetMap contributors\"\r\n      />\r\n      {allLocations.length > 0 && <SetMapBounds bounds={bounds} />}\r\n      {selectedLocations.map((loc, index) => (\r\n        <Marker key={index} position={[loc.lat, loc.lng]}>\r\n          <Popup>{loc.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default MapPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}