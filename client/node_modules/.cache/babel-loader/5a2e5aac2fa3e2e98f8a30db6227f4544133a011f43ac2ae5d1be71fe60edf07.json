{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdpro\\\\Projects\\\\NW Watershed Coalition\\\\dashboard\\\\src\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters({\n  onFilterChange\n}) {\n  _s();\n  const [sites, setSites] = useState([]); // Site list\n  const [filteredSites, setFilteredSites] = useState([]); // Filtered site list\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Default to past two years\n  const defaultStartDate = new Date();\n  defaultStartDate.setFullYear(defaultStartDate.getFullYear() - 2);\n  const [startDate, setStartDate] = useState(defaultStartDate);\n  const [endDate, setEndDate] = useState(new Date());\n\n  // Load site data from CSV\n  useEffect(() => {\n    fetch(\"/locations.csv\").then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          const siteList = result.data.filter(site => site.name) // Ensure 'name' exists\n          .map(site => ({\n            id: site.id,\n            name: site.name.trim()\n          }));\n          setSites(siteList);\n          setFilteredSites(siteList); // Initially show all sites\n        }\n      });\n    });\n  }, []);\n\n  // Update filtered site list based on search input\n  useEffect(() => {\n    const filtered = sites.filter(site => {\n      var _site$name;\n      return (_site$name = site.name) === null || _site$name === void 0 ? void 0 : _site$name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setFilteredSites(filtered);\n  }, [searchQuery, sites]);\n\n  // Handle filter updates\n  useEffect(() => {\n    onFilterChange({\n      selectedSite,\n      startDate,\n      endDate\n    });\n  }, [selectedSite, startDate, endDate, onFilterChange]);\n\n  // Handle Reset\n  const resetFilters = () => {\n    setStartDate(defaultStartDate);\n    setEndDate(new Date());\n    setSearchQuery(\"\");\n    setSelectedSite(null);\n    setFilteredSites(sites); // Reset site list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search sites...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-list\",\n      children: filteredSites.map(site => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `site-item ${(selectedSite === null || selectedSite === void 0 ? void 0 : selectedSite.id) === site.id ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedSite(site),\n        children: site.name\n      }, site.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Select a date range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"From:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: date => setStartDate(date),\n      selectsStart: true,\n      startDate: startDate,\n      endDate: endDate,\n      dateFormat: \"MM/dd/yyyy\",\n      className: \"date-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Until:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: endDate,\n      onChange: date => setEndDate(date),\n      selectsEnd: true,\n      startDate: startDate,\n      endDate: endDate,\n      minDate: startDate,\n      dateFormat: \"MM/dd/yyyy\",\n      className: \"date-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetFilters,\n        className: \"reset-btn\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEndDate(new Date()),\n        className: \"today-btn\",\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"6/qVwKv001ojuTznI2hO8UKlg44=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","Papa","jsxDEV","_jsxDEV","Filters","onFilterChange","_s","sites","setSites","filteredSites","setFilteredSites","selectedSite","setSelectedSite","searchQuery","setSearchQuery","defaultStartDate","Date","setFullYear","getFullYear","startDate","setStartDate","endDate","setEndDate","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","siteList","data","filter","site","name","map","id","trim","filtered","_site$name","toLowerCase","includes","resetFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","selected","date","selectsStart","dateFormat","selectsEnd","minDate","_c","$RefreshReg$"],"sources":["C:/Users/rdpro/Projects/NW Watershed Coalition/dashboard/src/Filters.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Filters({ onFilterChange }) {\r\n  const [sites, setSites] = useState([]); // Site list\r\n  const [filteredSites, setFilteredSites] = useState([]); // Filtered site list\r\n  const [selectedSite, setSelectedSite] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Default to past two years\r\n  const defaultStartDate = new Date();\r\n  defaultStartDate.setFullYear(defaultStartDate.getFullYear() - 2);\r\n\r\n  const [startDate, setStartDate] = useState(defaultStartDate);\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Load site data from CSV\r\n  useEffect(() => {\r\n    fetch(\"/locations.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            const siteList = result.data\r\n              .filter((site) => site.name) // Ensure 'name' exists\r\n              .map((site) => ({\r\n                id: site.id,\r\n                name: site.name.trim(),\r\n              }));\r\n            setSites(siteList);\r\n            setFilteredSites(siteList); // Initially show all sites\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // Update filtered site list based on search input\r\n  useEffect(() => {\r\n    const filtered = sites.filter((site) =>\r\n      site.name?.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setFilteredSites(filtered);\r\n  }, [searchQuery, sites]);\r\n\r\n  // Handle filter updates\r\n  useEffect(() => {\r\n    onFilterChange({ selectedSite, startDate, endDate });\r\n  }, [selectedSite, startDate, endDate, onFilterChange]);\r\n\r\n  // Handle Reset\r\n  const resetFilters = () => {\r\n    setStartDate(defaultStartDate);\r\n    setEndDate(new Date());\r\n    setSearchQuery(\"\");\r\n    setSelectedSite(null);\r\n    setFilteredSites(sites); // Reset site list\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <h3>Filter Data</h3>\r\n\r\n      {/* Search Box */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search sites...\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        className=\"search-box\"\r\n      />\r\n\r\n      {/* Scrollable Site List */}\r\n      <div className=\"site-list\">\r\n        {filteredSites.map((site) => (\r\n          <div\r\n            key={site.id}\r\n            className={`site-item ${selectedSite?.id === site.id ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelectedSite(site)}\r\n          >\r\n            {site.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Date Range Picker */}\r\n      <h4>Select a date range</h4>\r\n      <label>From:</label>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date) => setStartDate(date)}\r\n        selectsStart\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n        className=\"date-picker\"\r\n      />\r\n\r\n      <label>Until:</label>\r\n      <DatePicker\r\n        selected={endDate}\r\n        onChange={(date) => setEndDate(date)}\r\n        selectsEnd\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        minDate={startDate}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n        className=\"date-picker\"\r\n      />\r\n\r\n      {/* Reset Button */}\r\n      <div className=\"filter-buttons\">\r\n        <button onClick={resetFilters} className=\"reset-btn\">Reset</button>\r\n        <button onClick={() => setEndDate(new Date())} className=\"today-btn\">Today</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}