{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdpro\\\\Projects\\\\NW Michigan Watershed Coalition\\\\dashboard\\\\src\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters({\n  onFilterChange\n}) {\n  _s();\n  const [sites, setSites] = useState([]);\n  const [filteredSites, setFilteredSites] = useState([]); // Filtered list for search\n  const [selectedSites, setSelectedSites] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/locations.csv\") // Ensure this path is correct\n    .then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          processSiteData(result.data);\n        }\n      });\n    });\n  }, []);\n  const processSiteData = data => {\n    // Extract unique locations\n    const uniqueSites = [...new Set(data.map(row => row.Location))].sort();\n    setSites(uniqueSites);\n    setFilteredSites(uniqueSites); // Initialize filtered sites\n  };\n\n  // Handle site search\n  const handleSearch = event => {\n    const query = event.target.value.toLowerCase();\n    setSearchQuery(query);\n    setFilteredSites(sites.filter(site => site.toLowerCase().includes(query)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search sites...\",\n        className: \"search-box\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-list\",\n        children: filteredSites.length > 0 ? filteredSites.map(site => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `site-item ${selectedSites.includes(site) ? \"selected\" : \"\"}`,\n          onClick: () => {\n            const updatedSelection = selectedSites.includes(site) ? selectedSites.filter(s => s !== site) : [...selectedSites, site];\n            setSelectedSites(updatedSelection);\n            onFilterChange(prev => ({\n              ...prev,\n              selectedSites: updatedSelection\n            }));\n          },\n          children: site\n        }, site, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-sites\",\n          children: \"No sites found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"filter-separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"IxWYjs9qAZAqjkkWAGxucq33bDE=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","Papa","jsxDEV","_jsxDEV","Filters","onFilterChange","_s","sites","setSites","filteredSites","setFilteredSites","selectedSites","setSelectedSites","searchQuery","setSearchQuery","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","processSiteData","data","uniqueSites","Set","map","row","Location","sort","handleSearch","event","query","target","value","toLowerCase","filter","site","includes","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","updatedSelection","s","prev","_c","$RefreshReg$"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/dashboard/src/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Filters({ onFilterChange }) {\r\n  const [sites, setSites] = useState([]);\r\n  const [filteredSites, setFilteredSites] = useState([]); // Filtered list for search\r\n  const [selectedSites, setSelectedSites] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/locations.csv\") // Ensure this path is correct\r\n      .then(response => response.text())\r\n      .then(csvText => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            processSiteData(result.data);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const processSiteData = (data) => {\r\n    // Extract unique locations\r\n    const uniqueSites = [...new Set(data.map(row => row.Location))].sort();\r\n    setSites(uniqueSites);\r\n    setFilteredSites(uniqueSites); // Initialize filtered sites\r\n  };\r\n\r\n  // Handle site search\r\n  const handleSearch = (event) => {\r\n    const query = event.target.value.toLowerCase();\r\n    setSearchQuery(query);\r\n    setFilteredSites(sites.filter(site => site.toLowerCase().includes(query)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      \r\n      {/* Site Filter */}\r\n      <div className=\"filter-group\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Search sites...\" \r\n          className=\"search-box\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n        <div className=\"site-list\">\r\n          {filteredSites.length > 0 ? (\r\n            filteredSites.map(site => (\r\n              <div \r\n                key={site} \r\n                className={`site-item ${selectedSites.includes(site) ? \"selected\" : \"\"}`}\r\n                onClick={() => {\r\n                  const updatedSelection = selectedSites.includes(site)\r\n                    ? selectedSites.filter(s => s !== site)\r\n                    : [...selectedSites, site];\r\n                  setSelectedSites(updatedSelection);\r\n                  onFilterChange(prev => ({ ...prev, selectedSites: updatedSelection }));\r\n                }}\r\n              >\r\n                {site}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"no-sites\">No sites found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"filter-separator\" />\r\n\r\n      {/* Other filters remain unchanged */}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}