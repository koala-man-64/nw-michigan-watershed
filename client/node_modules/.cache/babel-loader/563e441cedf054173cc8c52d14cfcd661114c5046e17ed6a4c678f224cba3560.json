{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdpro\\\\Projects\\\\NW Watershed Coalition\\\\dashboard\\\\src\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters({\n  onFilterChange\n}) {\n  _s();\n  const [sites, setSites] = useState([]); // Original site list\n  const [filteredSites, setFilteredSites] = useState([]); // Sites after filtering\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Load site data from CSV\n  useEffect(() => {\n    fetch(\"/sites.csv\").then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          const siteList = result.data.map(site => ({\n            id: site.id,\n            name: site.name\n          }));\n          setSites(siteList);\n          setFilteredSites(siteList); // Initially show all sites\n        }\n      });\n    });\n  }, []);\n\n  // Update filtered site list based on search input\n  useEffect(() => {\n    const filtered = sites.filter(site => site.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredSites(filtered);\n  }, [searchQuery, sites]);\n\n  // Handle site selection\n  const handleSiteSelection = site => {\n    setSelectedSite(site);\n    onFilterChange({\n      selectedSite: site,\n      startDate,\n      endDate\n    });\n  };\n\n  // Handle date changes\n  useEffect(() => {\n    onFilterChange({\n      selectedSite,\n      startDate,\n      endDate\n    });\n  }, [startDate, endDate, selectedSite, onFilterChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search sites...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-list\",\n      children: filteredSites.map(site => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `site-item ${(selectedSite === null || selectedSite === void 0 ? void 0 : selectedSite.id) === site.id ? \"selected\" : \"\"}`,\n        onClick: () => handleSiteSelection(site),\n        children: site.name\n      }, site.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"From:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: date => setStartDate(date),\n      dateFormat: \"MM/dd/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Until:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: endDate,\n      onChange: date => setEndDate(date),\n      dateFormat: \"MM/dd/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"Gxa56CuiwHZKQuVgHB4aWAAMGHA=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","Papa","jsxDEV","_jsxDEV","Filters","onFilterChange","_s","sites","setSites","filteredSites","setFilteredSites","selectedSite","setSelectedSite","startDate","setStartDate","Date","endDate","setEndDate","searchQuery","setSearchQuery","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","siteList","data","map","site","id","name","filtered","filter","toLowerCase","includes","handleSiteSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","selected","date","dateFormat","_c","$RefreshReg$"],"sources":["C:/Users/rdpro/Projects/NW Watershed Coalition/dashboard/src/Filters.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Filters({ onFilterChange }) {\r\n  const [sites, setSites] = useState([]); // Original site list\r\n  const [filteredSites, setFilteredSites] = useState([]); // Sites after filtering\r\n  const [selectedSite, setSelectedSite] = useState(null);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Load site data from CSV\r\n  useEffect(() => {\r\n    fetch(\"/sites.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            const siteList = result.data.map((site) => ({\r\n              id: site.id,\r\n              name: site.name,\r\n            }));\r\n            setSites(siteList);\r\n            setFilteredSites(siteList); // Initially show all sites\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // Update filtered site list based on search input\r\n  useEffect(() => {\r\n    const filtered = sites.filter((site) =>\r\n      site.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setFilteredSites(filtered);\r\n  }, [searchQuery, sites]);\r\n\r\n  // Handle site selection\r\n  const handleSiteSelection = (site) => {\r\n    setSelectedSite(site);\r\n    onFilterChange({ selectedSite: site, startDate, endDate });\r\n  };\r\n\r\n  // Handle date changes\r\n  useEffect(() => {\r\n    onFilterChange({ selectedSite, startDate, endDate });\r\n  }, [startDate, endDate, selectedSite, onFilterChange]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <h3>Filter Data</h3>\r\n\r\n      {/* Search Box */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search sites...\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        className=\"search-box\"\r\n      />\r\n\r\n      {/* Scrollable Site List */}\r\n      <div className=\"site-list\">\r\n        {filteredSites.map((site) => (\r\n          <div\r\n            key={site.id}\r\n            className={`site-item ${selectedSite?.id === site.id ? \"selected\" : \"\"}`}\r\n            onClick={() => handleSiteSelection(site)}\r\n          >\r\n            {site.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Date Pickers */}\r\n      <label>From:</label>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date) => setStartDate(date)}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n      />\r\n\r\n      <label>Until:</label>\r\n      <DatePicker\r\n        selected={endDate}\r\n        onChange={(date) => setEndDate(date)}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}