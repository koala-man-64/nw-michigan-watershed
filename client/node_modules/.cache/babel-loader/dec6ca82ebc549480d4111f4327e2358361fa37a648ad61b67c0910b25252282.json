{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Line,Bar}from\"react-chartjs-2\";import{Chart,registerables}from\"chart.js\";import Papa from\"papaparse\";// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(...registerables);// Default color palette: professional grey and blue tones.\nconst defaultColors=[\"#37474F\",\"#5BC0DE\",\"#6C757D\",\"#ADB5BD\",\"#007BFF\"];// Chart Configuration\nconst chartConfig={\"Total Phosphorous\":{type:\"line\",title:\"Total Phosphorus Trend Chart\",yLabel:\"Total P (mg/m3)\"},\"Secchi\":{type:\"bar\",title:\"Secchi Comparison Chart\",yLabel:\"Secchi (feet)\"}};function Plots(_ref){let{selectedParameters,selectedSites,startDate,endDate}=_ref;const[chartData,setChartData]=useState({});const[loading,setLoading]=useState(false);useEffect(()=>{if(selectedParameters.length===0||selectedSites.length===0){setChartData({});// Clear chart data if no selections\nreturn;}setLoading(true);console.log(\"Fetching water quality data...\");// Moved processData inside the effect to avoid dependency issues.\nconst processData=data=>{const formattedData={};selectedParameters.forEach(parameter=>{const config=chartConfig[parameter];if(!config)return;// Filter rows based on selected sites and date range\nlet filteredData=data.filter(row=>row.Parameter===parameter&&selectedSites.includes(row.Location)&&parseInt(row.Year)>=startDate.getFullYear()&&parseInt(row.Year)<=endDate.getFullYear());filteredData.sort((a,b)=>parseInt(a.Year)-parseInt(b.Year));// Sort by year\nif(filteredData.length===0){formattedData[parameter]={labels:[],datasets:[]};}else if(config.type===\"line\"){formattedData[parameter]={labels:[...new Set(filteredData.map(row=>row.Year))],datasets:selectedSites.map((site,idx)=>{const siteData=filteredData.filter(row=>row.Location===site);return{label:site,data:siteData.map(row=>parseFloat(row.Value)),borderColor:defaultColors[idx%defaultColors.length],backgroundColor:defaultColors[idx%defaultColors.length],fill:false,tension:0.1};}).filter(dataset=>dataset.data.length>0)};}else if(config.type===\"bar\"){const uniqueLocations=[...new Set(filteredData.map(row=>row.Location))];formattedData[parameter]={labels:uniqueLocations,datasets:[{label:parameter,data:filteredData.map(row=>parseFloat(row.Value)),backgroundColor:uniqueLocations.map((_,idx)=>defaultColors[idx%defaultColors.length])}]};}});console.log(\"Formatted Chart Data:\",formattedData);setChartData(formattedData);setLoading(false);};fetch(\"/water_quality_data.csv\").then(response=>response.text()).then(csvText=>{Papa.parse(csvText,{header:true,skipEmptyLines:true,complete:result=>{console.log(\"CSV Data Parsed:\",result.data);processData(result.data);}});}).catch(error=>{console.error(\"Error fetching CSV:\",error);setLoading(false);});},[selectedParameters,selectedSites,startDate,endDate]);return/*#__PURE__*/_jsx(\"div\",{className:\"plots-container\",children:selectedParameters.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-plot-message\",children:\"Select a parameter to display plots.\"}):selectedParameters.map((param,index)=>{var _chartConfig$param,_chartConfig$param2,_chartConfig$param3,_chartConfig$param4,_chartConfig$param5;return/*#__PURE__*/_jsxs(\"div\",{className:\"plot-panel\",children:[/*#__PURE__*/_jsx(\"h4\",{children:((_chartConfig$param=chartConfig[param])===null||_chartConfig$param===void 0?void 0:_chartConfig$param.title)||param}),/*#__PURE__*/_jsx(\"div\",{className:\"plot-content\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading data...\"}):chartData[param]&&chartData[param].labels.length>0?((_chartConfig$param2=chartConfig[param])===null||_chartConfig$param2===void 0?void 0:_chartConfig$param2.type)===\"line\"?/*#__PURE__*/_jsx(Line,{data:chartData[param],options:{responsive:true,maintainAspectRatio:false,// Always disable to prevent stretching\nscales:{y:{title:{display:true,text:(_chartConfig$param3=chartConfig[param])===null||_chartConfig$param3===void 0?void 0:_chartConfig$param3.yLabel}}}}}):((_chartConfig$param4=chartConfig[param])===null||_chartConfig$param4===void 0?void 0:_chartConfig$param4.type)===\"bar\"?/*#__PURE__*/_jsx(Bar,{data:chartData[param],options:{responsive:true,maintainAspectRatio:false,// Always disable to prevent stretching\nscales:{y:{title:{display:true,text:(_chartConfig$param5=chartConfig[param])===null||_chartConfig$param5===void 0?void 0:_chartConfig$param5.yLabel}}}}}):/*#__PURE__*/_jsx(\"p\",{children:\"No chart available\"}):/*#__PURE__*/_jsx(\"p\",{children:\"No Data Available\"})})]},index);})});}export default Plots;","map":{"version":3,"names":["React","useEffect","useState","Line","Bar","Chart","registerables","Papa","jsx","_jsx","jsxs","_jsxs","register","defaultColors","chartConfig","type","title","yLabel","Plots","_ref","selectedParameters","selectedSites","startDate","endDate","chartData","setChartData","loading","setLoading","length","console","log","processData","data","formattedData","forEach","parameter","config","filteredData","filter","row","Parameter","includes","Location","parseInt","Year","getFullYear","sort","a","b","labels","datasets","Set","map","site","idx","siteData","label","parseFloat","Value","borderColor","backgroundColor","fill","tension","dataset","uniqueLocations","_","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","catch","error","className","children","param","index","_chartConfig$param","_chartConfig$param2","_chartConfig$param3","_chartConfig$param4","_chartConfig$param5","options","responsive","maintainAspectRatio","scales","y","display"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/client/src/Plots.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport Papa from \"papaparse\";\r\n\r\n// Register Chart.js components\r\nChart.register(...registerables);\r\n\r\n// Default color palette: professional grey and blue tones.\r\nconst defaultColors = [\"#37474F\", \"#5BC0DE\", \"#6C757D\", \"#ADB5BD\", \"#007BFF\"];\r\n\r\n// Chart Configuration\r\nconst chartConfig = {\r\n  \"Total Phosphorous\": {\r\n    type: \"line\",\r\n    title: \"Total Phosphorus Trend Chart\",\r\n    yLabel: \"Total P (mg/m3)\"\r\n  },\r\n  \"Secchi\": {\r\n    type: \"bar\",\r\n    title: \"Secchi Comparison Chart\",\r\n    yLabel: \"Secchi (feet)\"\r\n  }\r\n};\r\n\r\nfunction Plots({ selectedParameters, selectedSites, startDate, endDate }) {\r\n  const [chartData, setChartData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedParameters.length === 0 || selectedSites.length === 0) {\r\n      setChartData({}); // Clear chart data if no selections\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    console.log(\"Fetching water quality data...\");\r\n\r\n    // Moved processData inside the effect to avoid dependency issues.\r\n    const processData = (data) => {\r\n      const formattedData = {};\r\n\r\n      selectedParameters.forEach((parameter) => {\r\n        const config = chartConfig[parameter];\r\n        if (!config) return;\r\n\r\n        // Filter rows based on selected sites and date range\r\n        let filteredData = data.filter(row =>\r\n          row.Parameter === parameter &&\r\n          selectedSites.includes(row.Location) &&\r\n          parseInt(row.Year) >= startDate.getFullYear() &&\r\n          parseInt(row.Year) <= endDate.getFullYear()\r\n        );\r\n\r\n        filteredData.sort((a, b) => parseInt(a.Year) - parseInt(b.Year)); // Sort by year\r\n\r\n        if (filteredData.length === 0) {\r\n          formattedData[parameter] = { labels: [], datasets: [] };\r\n        } else if (config.type === \"line\") {\r\n          formattedData[parameter] = {\r\n            labels: [...new Set(filteredData.map(row => row.Year))],\r\n            datasets: selectedSites\r\n              .map((site, idx) => {\r\n                const siteData = filteredData.filter(row => row.Location === site);\r\n                return {\r\n                  label: site,\r\n                  data: siteData.map(row => parseFloat(row.Value)),\r\n                  borderColor: defaultColors[idx % defaultColors.length],\r\n                  backgroundColor: defaultColors[idx % defaultColors.length],\r\n                  fill: false,\r\n                  tension: 0.1\r\n                };\r\n              })\r\n              .filter(dataset => dataset.data.length > 0)\r\n          };\r\n        } else if (config.type === \"bar\") {\r\n          const uniqueLocations = [...new Set(filteredData.map(row => row.Location))];\r\n          formattedData[parameter] = {\r\n            labels: uniqueLocations,\r\n            datasets: [\r\n              {\r\n                label: parameter,\r\n                data: filteredData.map(row => parseFloat(row.Value)),\r\n                backgroundColor: uniqueLocations.map((_, idx) => defaultColors[idx % defaultColors.length])\r\n              }\r\n            ]\r\n          };\r\n        }\r\n      });\r\n\r\n      console.log(\"Formatted Chart Data:\", formattedData);\r\n      setChartData(formattedData);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetch(\"/water_quality_data.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            console.log(\"CSV Data Parsed:\", result.data);\r\n            processData(result.data);\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching CSV:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [selectedParameters, selectedSites, startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"plots-container\">\r\n      {selectedParameters.length === 0 ? (\r\n        <p className=\"no-plot-message\">Select a parameter to display plots.</p>\r\n      ) : (\r\n        selectedParameters.map((param, index) => (\r\n          <div key={index} className=\"plot-panel\">\r\n            <h4>{chartConfig[param]?.title || param}</h4>\r\n            <div className=\"plot-content\">\r\n              {loading ? (\r\n                <p>Loading data...</p>\r\n              ) : chartData[param] && chartData[param].labels.length > 0 ? (\r\n                chartConfig[param]?.type === \"line\" ? (\r\n                  <Line\r\n                    data={chartData[param]}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: false, // Always disable to prevent stretching\r\n                      scales: {\r\n                        y: {\r\n                          title: { display: true, text: chartConfig[param]?.yLabel }\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : chartConfig[param]?.type === \"bar\" ? (\r\n                  <Bar\r\n                    data={chartData[param]}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: false, // Always disable to prevent stretching\r\n                      scales: {\r\n                        y: {\r\n                          title: { display: true, text: chartConfig[param]?.yLabel }\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <p>No chart available</p>\r\n                )\r\n              ) : (\r\n                <p>No Data Available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Plots;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}