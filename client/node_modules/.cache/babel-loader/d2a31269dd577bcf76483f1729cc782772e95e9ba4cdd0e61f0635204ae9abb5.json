{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Papa from\"papaparse\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Filters(_ref){let{onFilterChange}=_ref;// Site state\nconst[sites,setSites]=useState([]);const[searchQuery,setSearchQuery]=useState(\"\");const[selectedSites,setSelectedSites]=useState([]);// Parameter state\nconst[selectedParameters,setSelectedParameters]=useState([]);// Year range state\nconst[availableYears,setAvailableYears]=useState([]);const[startYear,setStartYear]=useState(null);const[endYear,setEndYear]=useState(null);// 1. Load all site names from `locations.csv`\nuseEffect(()=>{fetch(\"/locations.csv\").then(response=>response.text()).then(csvText=>{Papa.parse(csvText,{header:true,skipEmptyLines:true,complete:result=>{// For each row, assume there's a \"name\" or \"Location\" field\nconst allSites=result.data.map(row=>row.name||row.Location).filter(site=>site);// remove any empty values\n// Remove duplicates and sort\nconst uniqueSites=[...new Set(allSites)].sort();setSites(uniqueSites);}});});},[]);// 2. Load years from `water_quality_data.csv` for date range logic\nuseEffect(()=>{fetch(\"/water_quality_data.csv\").then(response=>response.text()).then(csvText=>{Papa.parse(csvText,{header:true,skipEmptyLines:true,complete:result=>{processYearData(result.data);}});});},[]);// Process year range from water_quality_data.csv\nconst processYearData=data=>{const years=data.map(row=>parseInt(row.Year)).filter(y=>!isNaN(y));if(years.length===0)return;const min=Math.min(...years);const max=Math.max(...years);setAvailableYears(years.filter(y=>y>=min&&y<=max).sort((a,b)=>a-b));setStartYear(min);setEndYear(max);// Update parent filters with default date range\nonFilterChange(prev=>({...prev,startDate:new Date(min,0,1),endDate:new Date(max,11,31)}));};// Handle site search\nconst filteredSites=sites.filter(site=>site.toLowerCase().includes(searchQuery.toLowerCase()));// Handle start/end year changes\nconst handleStartYearChange=event=>{const newStart=parseInt(event.target.value);if(newStart<=endYear){setStartYear(newStart);onFilterChange(prev=>({...prev,startDate:new Date(newStart,0,1)}));}};const handleEndYearChange=event=>{const newEnd=parseInt(event.target.value);if(newEnd>=startYear){setEndYear(newEnd);onFilterChange(prev=>({...prev,endDate:new Date(newEnd,11,31)}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search sites...\",className:\"search-box\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)}),/*#__PURE__*/_jsx(\"div\",{className:\"site-list\",children:filteredSites.map(site=>/*#__PURE__*/_jsx(\"div\",{className:`site-item ${selectedSites.includes(site)?\"selected\":\"\"}`,onClick:()=>{const updatedSelection=selectedSites.includes(site)?selectedSites.filter(s=>s!==site):[...selectedSites,site];setSelectedSites(updatedSelection);onFilterChange(prev=>({...prev,selectedSites:updatedSelection}));},children:site},site))})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"filter-separator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group parameter-filter\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Parameter:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"parameter-options\",children:[\"Total Phosphorous\",\"Secchi\"].map(param=>/*#__PURE__*/_jsxs(\"label\",{className:\"parameter-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedParameters.includes(param),onChange:()=>{const updatedParams=selectedParameters.includes(param)?selectedParameters.filter(p=>p!==param):[...selectedParameters,param];setSelectedParameters(updatedParams);onFilterChange(prev=>({...prev,selectedParameters:updatedParams}));}}),param]},param))})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"filter-separator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Year Range:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-dropdowns\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Year:\",/*#__PURE__*/_jsx(\"select\",{value:startYear||\"\",onChange:handleStartYearChange,className:\"year-select\",children:availableYears.map(y=>/*#__PURE__*/_jsx(\"option\",{value:y,children:y},y))})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Year:\",/*#__PURE__*/_jsx(\"select\",{value:endYear||\"\",onChange:handleEndYearChange,className:\"year-select\",children:availableYears.map(y=>/*#__PURE__*/_jsx(\"option\",{value:y,children:y},y))})]})]})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"filter-separator\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group filter-buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-btn\",onClick:()=>{setSelectedSites([]);setSelectedParameters([]);if(availableYears.length>0){const min=Math.min(...availableYears);const max=Math.max(...availableYears);setStartYear(min);setEndYear(max);onFilterChange({selectedSites:[],selectedParameters:[],startDate:new Date(min,0,1),endDate:new Date(max,11,31)});}else{onFilterChange({selectedSites:[],selectedParameters:[],startDate:new Date(),endDate:new Date()});}},children:\"Reset\"})})]});}export default Filters;","map":{"version":3,"names":["React","useEffect","useState","Papa","jsx","_jsx","jsxs","_jsxs","Filters","_ref","onFilterChange","sites","setSites","searchQuery","setSearchQuery","selectedSites","setSelectedSites","selectedParameters","setSelectedParameters","availableYears","setAvailableYears","startYear","setStartYear","endYear","setEndYear","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","allSites","data","map","row","name","Location","filter","site","uniqueSites","Set","sort","processYearData","years","parseInt","Year","y","isNaN","length","min","Math","max","a","b","prev","startDate","Date","endDate","filteredSites","toLowerCase","includes","handleStartYearChange","event","newStart","target","value","handleEndYearChange","newEnd","className","children","type","placeholder","onChange","e","onClick","updatedSelection","s","param","checked","updatedParams","p"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/dashboard/src/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Filters({ onFilterChange }) {\r\n  // Site state\r\n  const [sites, setSites] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedSites, setSelectedSites] = useState([]);\r\n\r\n  // Parameter state\r\n  const [selectedParameters, setSelectedParameters] = useState([]);\r\n\r\n  // Year range state\r\n  const [availableYears, setAvailableYears] = useState([]);\r\n  const [startYear, setStartYear] = useState(null);\r\n  const [endYear, setEndYear] = useState(null);\r\n\r\n  // 1. Load all site names from `locations.csv`\r\n  useEffect(() => {\r\n    fetch(\"/locations.csv\")\r\n      .then(response => response.text())\r\n      .then(csvText => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            // For each row, assume there's a \"name\" or \"Location\" field\r\n            const allSites = result.data\r\n              .map(row => row.name || row.Location)\r\n              .filter(site => site); // remove any empty values\r\n            // Remove duplicates and sort\r\n            const uniqueSites = [...new Set(allSites)].sort();\r\n            setSites(uniqueSites);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // 2. Load years from `water_quality_data.csv` for date range logic\r\n  useEffect(() => {\r\n    fetch(\"/water_quality_data.csv\")\r\n      .then(response => response.text())\r\n      .then(csvText => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            processYearData(result.data);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // Process year range from water_quality_data.csv\r\n  const processYearData = (data) => {\r\n    const years = data.map(row => parseInt(row.Year)).filter(y => !isNaN(y));\r\n    if (years.length === 0) return;\r\n    const min = Math.min(...years);\r\n    const max = Math.max(...years);\r\n    setAvailableYears(years.filter(y => y >= min && y <= max).sort((a, b) => a - b));\r\n    setStartYear(min);\r\n    setEndYear(max);\r\n\r\n    // Update parent filters with default date range\r\n    onFilterChange(prev => ({\r\n      ...prev,\r\n      startDate: new Date(min, 0, 1),\r\n      endDate: new Date(max, 11, 31),\r\n    }));\r\n  };\r\n\r\n  // Handle site search\r\n  const filteredSites = sites.filter(site =>\r\n    site.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  // Handle start/end year changes\r\n  const handleStartYearChange = (event) => {\r\n    const newStart = parseInt(event.target.value);\r\n    if (newStart <= endYear) {\r\n      setStartYear(newStart);\r\n      onFilterChange(prev => ({\r\n        ...prev,\r\n        startDate: new Date(newStart, 0, 1),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleEndYearChange = (event) => {\r\n    const newEnd = parseInt(event.target.value);\r\n    if (newEnd >= startYear) {\r\n      setEndYear(newEnd);\r\n      onFilterChange(prev => ({\r\n        ...prev,\r\n        endDate: new Date(newEnd, 11, 31),\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      {/* Site Filter */}\r\n      <div className=\"filter-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search sites...\"\r\n          className=\"search-box\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <div className=\"site-list\">\r\n          {filteredSites.map(site => (\r\n            <div\r\n              key={site}\r\n              className={`site-item ${selectedSites.includes(site) ? \"selected\" : \"\"}`}\r\n              onClick={() => {\r\n                const updatedSelection = selectedSites.includes(site)\r\n                  ? selectedSites.filter(s => s !== site)\r\n                  : [...selectedSites, site];\r\n                setSelectedSites(updatedSelection);\r\n                onFilterChange(prev => ({ ...prev, selectedSites: updatedSelection }));\r\n              }}\r\n            >\r\n              {site}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"filter-separator\" />\r\n\r\n      {/* Parameter Filter */}\r\n      <div className=\"filter-group parameter-filter\">\r\n        <span>Parameter:</span>\r\n        <div className=\"parameter-options\">\r\n          {[\"Total Phosphorous\", \"Secchi\"].map(param => (\r\n            <label key={param} className=\"parameter-option\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedParameters.includes(param)}\r\n                onChange={() => {\r\n                  const updatedParams = selectedParameters.includes(param)\r\n                    ? selectedParameters.filter(p => p !== param)\r\n                    : [...selectedParameters, param];\r\n                  setSelectedParameters(updatedParams);\r\n                  onFilterChange(prev => ({ ...prev, selectedParameters: updatedParams }));\r\n                }}\r\n              />\r\n              {param}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"filter-separator\" />\r\n\r\n      {/* Year Range Dropdowns */}\r\n      <div className=\"filter-group\">\r\n        <span>Year Range:</span>\r\n        <div className=\"year-dropdowns\">\r\n          <label>\r\n            Start Year:\r\n            <select\r\n              value={startYear || \"\"}\r\n              onChange={handleStartYearChange}\r\n              className=\"year-select\"\r\n            >\r\n              {availableYears.map(y => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            End Year:\r\n            <select\r\n              value={endYear || \"\"}\r\n              onChange={handleEndYearChange}\r\n              className=\"year-select\"\r\n            >\r\n              {availableYears.map(y => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"filter-separator\" />\r\n\r\n      {/* Reset Button */}\r\n      <div className=\"filter-group filter-buttons\">\r\n        <button\r\n          className=\"reset-btn\"\r\n          onClick={() => {\r\n            setSelectedSites([]);\r\n            setSelectedParameters([]);\r\n            if (availableYears.length > 0) {\r\n              const min = Math.min(...availableYears);\r\n              const max = Math.max(...availableYears);\r\n              setStartYear(min);\r\n              setEndYear(max);\r\n              onFilterChange({\r\n                selectedSites: [],\r\n                selectedParameters: [],\r\n                startDate: new Date(min, 0, 1),\r\n                endDate: new Date(max, 11, 31),\r\n              });\r\n            } else {\r\n              onFilterChange({\r\n                selectedSites: [],\r\n                selectedParameters: [],\r\n                startDate: new Date(),\r\n                endDate: new Date(),\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}