{
  "info": {
    "_postman_id": "8b8f8d5c-6c5e-4f1b-9d0a-7a7d0e7fa5a2",
    "name": "ReadCsvFromBlob (Local)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "local"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:7071", "type": "string" },
    { "key": "container", "value": "my-container", "type": "string" },
    { "key": "blob", "value": "folder/yourfile.csv", "type": "string" }
  ],
  "item": [
    {
      "name": "GET → JSON rows",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Accept", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/read-csv?container={{container}}&blob={{blob}}&format=json",
          "host": ["{{baseUrl}}"],
          "path": ["api", "read-csv"],
          "query": [
            { "key": "container", "value": "{{container}}" },
            { "key": "blob", "value": "{{blob}}" },
            { "key": "format", "value": "json" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status is 200\", () => pm.response.code === 200);",
              "pm.test(\"Content-Type is JSON\", () => pm.response.headers.get('Content-Type').toLowerCase().includes('application/json'));",
              "let data;",
              "try { data = pm.response.json(); } catch (e) { data = null; }",
              "pm.test(\"Body is array\", () => Array.isArray(data));",
              "pm.environment.set('rowCount', Array.isArray(data) ? data.length : 0);"
            ]
          }
        }
      ]
    },
    {
      "name": "GET → CSV passthrough",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Accept", "value": "text/csv" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/read-csv?container={{container}}&blob={{blob}}&format=csv",
          "host": ["{{baseUrl}}"],
          "path": ["api", "read-csv"],
          "query": [
            { "key": "container", "value": "{{container}}" },
            { "key": "blob", "value": "{{blob}}" },
            { "key": "format", "value": "csv" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status is 200\", () => pm.response.code === 200);",
              "pm.test(\"Content-Type is CSV\", () => pm.response.headers.get('Content-Type').toLowerCase().includes('text/csv'));",
              "pm.test(\"Body not empty\", () => pm.response.text().length > 0);"
            ]
          }
        }
      ]
    },
    {
      "name": "POST → JSON rows (body)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Accept", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"container\": \"{{container}}\",\n  \"blob\": \"{{blob}}\",\n  \"format\": \"json\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/read-csv",
          "host": ["{{baseUrl}}"],
          "path": ["api", "read-csv"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status is 200\", () => pm.response.code === 200);",
              "pm.test(\"Content-Type is JSON\", () => pm.response.headers.get('Content-Type').toLowerCase().includes('application/json'));",
              "let data;",
              "try { data = pm.response.json(); } catch (e) { data = null; }",
              "pm.test(\"Body is array\", () => Array.isArray(data));",
              "pm.environment.set('rowCount', Array.isArray(data) ? data.length : 0);"
            ]
          }
        }
      ]
    },
    {
      "name": "NEGATIVE → missing params (expect 400)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Accept", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/read-csv",
          "host": ["{{baseUrl}}"],
          "path": ["api", "read-csv"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status is 400\", () => pm.response.code === 400);",
              "let err;",
              "try { err = pm.response.json(); } catch (e) { err = null; }",
              "pm.test(\"Has error message\", () => err && typeof err.error === 'string' && err.error.length > 0);"
            ]
          }
        }
      ]
    }
  ]
}
