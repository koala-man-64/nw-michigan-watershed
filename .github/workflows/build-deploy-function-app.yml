name: Azure Function App Build and Deploy

# Trigger on pushes to main and dev; allow manual triggers for additional control.
on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'functions/**'  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (optional)'
        required: false
        default: 'production'

jobs:
  build_job:
    name: Build Azure Function App
    runs-on: ubuntu-latest
    outputs:
      output-dir: ${{ steps.set-output.outputs.output-dir }}  # Export the build folder path for use in later jobs.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out your repo code.
        with:
          submodules: true   # Fetch submodules if any
          lfs: false         # Disable Git LFS if not needed
      
      - name: Set output directory
        id: set-output
        run: echo "output-dir=functions/build" >> $GITHUB_OUTPUT  # Define and export the build output directory.
      
      - name: Setup Python
        uses: actions/setup-python@v4  # Set up Python environment.
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          cd functions
          pip install -r requirements.txt  # Install required Python packages.
      
      - name: Upload Function App artifact
        uses: actions/upload-artifact@v4  # Upload the entire "functions" folder.
        with:
          name: functionapp-build  # Artifact name.
          path: functions/build       # Path relative to repo root.

  deploy_job:
    name: Deploy to Azure Function App (Dev/Prod)
    runs-on: ubuntu-latest
    needs: build_job  # Wait until the build job completes.
    # Deploy automatically on push to dev, or run manually on main.
    if: ${{ (github.ref_name == 'dev' && github.event_name == 'push') || (github.ref_name == 'main' && github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3  # Download the previously uploaded artifact.
        with:
          name: functionapp-build  # Must match the upload name exactly.
          path: build-output         # Extract artifact to this folder.
      
      - name: Login to Azure using service principal
        uses: azure/login@v1  # Authenticate with Azure.
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set target function app name
        id: set-app
        run: |
          # Determine the target function app name based on branch.
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "app_name=fa-nwmiws-dev" >> $GITHUB_OUTPUT
          else
            echo "app_name=fa-nwmiws" >> $GITHUB_OUTPUT
          fi
      
      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1  # Deploy using the Azure Functions GitHub Action.
        with:
          app-name: ${{ steps.set-app.outputs.app_name }}  # Use the dynamic app name.
          package: functions  # The folder to deploy.
