# name: Azure Static Web App Build and Deploy

# on:
#   push:
#     branches:
#       - main  # Automatically triggers the build on push to main

#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Environment (optional)'
#         required: false
#         default: 'production'

# jobs:
#   build_job:
#     name: Build Web App
#     runs-on: ubuntu-latest
#     outputs:
#       output-dir: ${{ steps.set-output.outputs.output-dir }}
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           submodules: true
#           lfs: false

#       - name: Set output directory
#         id: set-output
#         run: echo "output-dir=dashboard/build" >> $GITHUB_OUTPUT

#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: |
#           cd dashboard
#           npm ci

#       - name: Build project
#         run: |
#           cd dashboard
#           npm run build

#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: webapp-build
#           path: dashboard/build

#   deploy_job:
#     name: Deploy to Azure Static Web Apps
#     runs-on: ubuntu-latest
#     needs: build_job
#     if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger

#     steps:
#       - name: Download build artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: webapp-build
#           path: dashboard/build

#       - name: Deploy
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_MOSS_00540341E }}
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           action: "upload"
#           app_location: "dashboard"
#           output_location: "dashboard/build"




# Name of the GitHub Actions workflow
name: Azure Static Web App Build and Deploy

# Define when this workflow should run
on:
  push:
    branches:
      - main  # Trigger automatically when pushing to the 'main' branch

  workflow_dispatch:  # Allow manual triggering of the workflow
    inputs:
      environment:
        description: 'Environment (optional)'  # Optional input to manually select an environment
        required: false
        default: 'production'

jobs:
  build_job:
    name: Build Web App  # Human-friendly name for this job
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for executing steps
    outputs:
      output-dir: ${{ steps.set-output.outputs.output-dir }}  # Capture the build directory path as an output for later jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Checkout the code from the repository
        with:
          submodules: true  # If using Git submodules, fetch them
          lfs: false  # Disable Git LFS if not needed

      - name: Set output directory
        id: set-output
        run: echo "output-dir=dashboard/build" >> $GITHUB_OUTPUT  # Set and export the path to the build output directory

      - name: Install Node.js
        uses: actions/setup-node@v3  # Install Node.js runtime
        with:
          node-version: '18'  # Specify the Node.js version to use

      - name: Install dependencies
        run: |
          cd dashboard  # Change directory to the app folder
          npm ci  # Install dependencies using the lockfile (clean install)

      - name: Build project
        run: |
          cd dashboard  # Move into the project directory again
          npm run build  # Run the custom build script defined in package.json

      - name: Upload artifact
        uses: actions/upload-artifact@v3  # Upload build output so the deploy job can access it
        with:
          name: webapp-build  # The name of the artifact to upload
          path: ../dashboard/build  # Folder to upload (the build output)

  deploy_job:
    name: Deploy to Azure Static Web App via CLI  # Name of the deployment job
    runs-on: ubuntu-latest  # Run this job on an Ubuntu runner
    needs: build_job  # Wait for the build job to complete first
    if: github.event_name == 'workflow_dispatch'  # Only run this job when manually triggered

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3  # Download the previously uploaded artifact
        with:
          name: webapp-build  # Must match the upload name exactly
          path: build-output  # Directory where the artifact will be extracted

      - name: Login to Azure
        uses: azure/login@v1  # Use the Azure login action to authenticate
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Pass in the service principal credentials stored in GitHub secrets

      - name: Install Azure CLI Static Web Apps extension
        run: az extension add --name webapp  # Add the Azure CLI extension required to deploy static web apps

        # Use the Azure CLI to upload the build output
      - name: Deploy to Azure Static Web App
        run: |
          az staticwebapp upload \  
            --name nwmiws \  
            --resource-group ppa-rg \  
            --source build-output 
