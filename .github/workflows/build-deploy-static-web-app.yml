name: Azure Static Web App Build and Deploy

on:
  push:
    branches:
      - main
      - dev
    # paths:
    #   - 'dashboard/**'   
    #   - '.github/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (optional)'
        required: false
        default: 'production'

jobs:
  build_job:
    name: Build Web App
    runs-on: ubuntu-latest
    outputs:
      output-dir: ${{ steps.set-output.outputs.output-dir }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Set output directory
        id: set-output
        run: |
          echo "::group::📂 Setting build output directory"
          set -x
          echo "output-dir=dashboard/build" >> $GITHUB_OUTPUT
          echo "::endgroup::"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |          
          cd client
          set -x          
          npm install
          npm install react@latest react-dom@latest
          npm install react-scripts
          npm install react-router-dom
          npm install web-vitals
          npm install papaparse
          npm install leaflet
          npm install react-leaflet
          npm install react-chartjs-2 chart.js
          npm install @azure/storage-blob
          npm install eslint-plugin-react-hooks

      - name: Update permissions
        run: sudo chmod +x client/node_modules/.bin/react-scripts

      - name: Build project
        run: |
          echo "::group::🛠 Building web project"
          cd client
          set -x          
          npm run build
          echo "::endgroup::"

      - name: Print folder structure
        run: |
          echo "::group::📁 Project folder structure"
          set -x
          tree -L 3 || find .
          echo "::endgroup::"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp-build
          path: client/build

  deploy_job:
    name: Deploy to Azure Static Web App
    runs-on: ubuntu-latest
    needs: build_job
    if: ${{ (github.ref_name == 'dev' && github.event_name == 'push') || (github.ref_name == 'main' && github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp-build
          path: build-output

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upgrade Azure CLI Static Web Apps extension
        run: |
          echo "::group::🧩 Upgrading Azure CLI Static Web Apps extension"
          set -x
          az extension add --name staticwebapp --upgrade
          echo "::endgroup::"

      - name: Set target app details
        id: set-app
        run: |
          echo "::group::📛 Setting Static Web App details"
          echo "app_name=agreeable-pebble-063e41e1e" >> $GITHUB_OUTPUT
          echo "resource_group=ppa-rg" >> $GITHUB_OUTPUT
          echo "::endgroup::"

      - name: Deploy Artifact to Static Web App
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::group::🚀 Deploying Artifact to Static Web App"
          APP_NAME="agreeable-pebble-063e41e1e"
          RG="ppa-rg"
          # Check if the Static Web App already exists
          if az staticwebapp show --name "$APP_NAME" --resource-group "$RG" > /dev/null 2>&1; then
            echo "Static Web App exists. Uploading deployment artifact..."
            az staticwebapp deployment upload \
              --name "$APP_NAME" \
              --resource-group "$RG" \
              --src build-output
          else
            echo "Static Web App does not exist. Creating it first..."
            az staticwebapp create \
              --name "$APP_NAME" \
              --resource-group "$RG" \
              --location eastus2 \
              --sku Free \
              --app-location "client" \
              --api-location "api" \
              --branch dev \
              --source "https://github.com/koala-man-64/nw-michigan-watershed" \
              --token "$REPO_TOKEN"
            echo "Uploading deployment artifact..."
            az staticwebapp deployment upload \
              --name "$APP_NAME" \
              --resource-group "$RG" \
              --src build-output
          fi
          echo "::endgroup::"