{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdpro\\\\Projects\\\\NW Michigan Watershed Coalition\\\\dashboard\\\\src\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Data() {\n  _s();\n  const [csvData, setCsvData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // 1. Load and parse CSV data from the public folder\n  useEffect(() => {\n    fetch(\"/data.csv\").then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        complete: result => {\n          setCsvData(result.data);\n          setLoading(false);\n        }\n      });\n    }).catch(error => {\n      console.error(\"Error loading CSV:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // 2. Handle changes to the CSV data\n  const handleChange = (rowIndex, field, newValue) => {\n    const updatedData = [...csvData];\n    updatedData[rowIndex][field] = newValue;\n    setCsvData(updatedData);\n  };\n\n  // 3. Convert JSON back to CSV and download the file\n  const downloadCSV = () => {\n    const csv = Papa.unparse(csvData);\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"data_updated.csv\";\n    link.click();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading CSV data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit CSV Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      cellSpacing: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: csvData.length > 0 && Object.keys(csvData[0]).map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: csvData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(row).map(([field, value], colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: value,\n              onChange: e => handleChange(rowIndex, field, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadCSV,\n      children: \"Download Updated CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Data, \"ZrOuj9DbgmpxuqlsN2G6mcrxwws=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","Papa","jsxDEV","_jsxDEV","Data","_s","csvData","setCsvData","loading","setLoading","fetch","then","response","text","csvText","parse","header","complete","result","data","catch","error","console","handleChange","rowIndex","field","newValue","updatedData","downloadCSV","csv","unparse","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","border","cellPadding","cellSpacing","length","Object","keys","map","index","row","entries","value","colIndex","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rdpro/Projects/NW Michigan Watershed Coalition/dashboard/src/Data.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction Data() {\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // 1. Load and parse CSV data from the public folder\r\n  useEffect(() => {\r\n    fetch(\"/data.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          complete: (result) => {\r\n            setCsvData(result.data);\r\n            setLoading(false);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading CSV:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // 2. Handle changes to the CSV data\r\n  const handleChange = (rowIndex, field, newValue) => {\r\n    const updatedData = [...csvData];\r\n    updatedData[rowIndex][field] = newValue;\r\n    setCsvData(updatedData);\r\n  };\r\n\r\n  // 3. Convert JSON back to CSV and download the file\r\n  const downloadCSV = () => {\r\n    const csv = Papa.unparse(csvData);\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = \"data_updated.csv\";\r\n    link.click();\r\n  };\r\n\r\n  if (loading) return <div>Loading CSV data...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Edit CSV Data</h2>\r\n      <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\">\r\n        <thead>\r\n          <tr>\r\n            {csvData.length > 0 &&\r\n              Object.keys(csvData[0]).map((header, index) => (\r\n                <th key={index}>{header}</th>\r\n              ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {csvData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {Object.entries(row).map(([field, value], colIndex) => (\r\n                <td key={colIndex}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) =>\r\n                      handleChange(rowIndex, field, e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      <button onClick={downloadCSV}>Download Updated CSV</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}